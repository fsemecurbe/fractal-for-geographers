---
format: 
  closeread-html:
    theme: styles/customs.scss
    cr-style:
      section-background-color: "#f9f9f2"  
      narrative-font-family: sans-serif
      narrative-text-color-sidebar: "#ffffff"  
      narrative-background-color-sidebar: "#A9A9A9"  
      narrative-background-color-overlay: "#7393B3"  
      narrative-text-color-overlay: "#FFFDD0"  
      narrative-border-radius: "5px"  
      narrative-overlay-max-width: "70%"  
      narrative-outer-margin: "10px"  
      narrative-font-size: "1.2rem"  
    #embed-resources: true
    remove-header-space: true
    code-tools: false
    cr-section:
      layout: "overlay-center"
---


<div class="custom-title">
  Beyond the Modifiable Areal Unit Problem!
</div>


## Why fractals are so useful for Geographers?


In the early eighties, fractals were everywhere, from the shape of clouds to the spatial organisation of galaxies. Now, scientists are more nuanced. Fractal is still a very important area of research, but there is no need for the world to be fractal in order to use fractal analysis.

Before we discuss the usefulness of fractals for geographers, it might be relevant to introduce them. Fractals were invented - discovered - by BenoÃ®t Mandelbrot, a French-American mathematician who believed that the world was not smooth, but rough. No matter how you look at it, every part of an object looks like the whole object. This is one way to describe what a fractal is. Another way is to say that a fractal has lots of detail at each scale. The two points of view are not opposite, as we can see.     


::::{.cr-section layout="overlay-center"}
{{< spacer 10svh >}}
This the picture of a simple fractal. This could well be a representation of a density map of population. The gradient colour scheme is showing the intensity of the density : <span style="color:#a50026;">higher values</span>  and <span style="color:#cce88b;">lower values</span> @cr-map

:::{#cr-map}
![](images/multifractal.svg){max-width=100;max-height=100}
:::

:::{#cr-map2}
![](images/multifractal1.svg)
:::

:::{#cr-map3}
![](images/multifractal2.svg)
:::

:::{#cr-map4}
![](images/multifractal3.svg)
:::

:::{#cr-map5}
![](images/multifractal4.svg)
:::

:::{#cr-map6}
![](images/multifractal5.svg)
:::

If we look closely at one part, we see the same pattern.  [@cr-map]{pan-to="0%,10%" scale-by="3"}

we can still go deeper, and we still find out the same pattern of details.  [@cr-map]{pan-to="0%, 10%" scale-by="9"}

When it comes to theoretical fractals, we can go deeper and deeper. But in practice, there is a minimum scale. [@cr-map]{pan-to="0%,20%" scale-by="27"}

For example, a city is made up of buildings. A building is the smallest part of a city. Inside a building, it's a whole different world. [@cr-map]{pan-to="0%,20%" scale-by="27"}

At each scale, the details are arranged in the same way. This is the most important property of the fractal: their scale are bound together with specific ties. @cr-map

In our example, the link is obvious and it appears when the fractal is being constructed.  @cr-map

To build our fractal, we need a generator a grid and a way to distribute the population in the space : P<sub>i</sub> is a probability distribution. Their sum is 1.  @cr-map2

The side of each cell is 1/3.   @cr-map2


In your example P<sub>5</sub>=1/2 and the other P<sub>1</sub>=P<sub>2</sub>...=P<sub>8</sub>=P<sub>9</sub>=1/12. @cr-map2

In other words, half of the population is concentrated in the cell 5. @cr-map2

The first step is to decompose each cell with the generator. @cr-map3

In each new cell, the population is P<sub>mother</sub>.P<sub>son</sub>   [@cr-map3]{pan-to="0%,0%" scale-by="3"}

The side of the cell is now (1/3)<sup>2</sup>.   [@cr-map3]{pan-to="0%,0%" scale-by="3"}

At this step, the representation of the fractal is vey simple. [@cr-map4]

If we divide the fractal into smaller parts again, we can see much more detail. The side of the cell is  (1/3)<sup>3</sup>. [@cr-map5]

To get the fractal, we keep decomposing it until we can't do it any more.  [@cr-map6]

:::


## The dimension of information

Fortunately, fractal theory isn't just a way of making fancy pictures, it's also a toolbox for measuring how the scales are related. BenoÃ®t Mandelbrot uses fractal dimensions to do this. There are a plethora of fractal dimensions, from the very theoretical to the more practical uses in Physics.

In this article, we focus on a specific dimension called the information dimension. It is based on the Shannon entropy, which is the number of Boolean questions we have to ask to find an element in an ensemble.

::::{.cr-section layout="overlay-center"}


Imagine a situation where Santa Claus is located in cell from the generator. It's probabity to be in a certain cell i is P<sub>i</sub>. @cr-map7

Keep in mind that P<sub>5</sub>=1/2 and The other probabilities are equally distributed. @cr-map7

How many questions do we ask to find him ? @cr-map7

The first legit question is  : "Is Santa Claus ðŸŽ… in the cell 5 ?" @cr-map8

If this is true, the game is over, one question is enough. @cr-map8b

Otherwise, we divide the rest of the cells into two groups [1,2,3,4] and [6,7,8,9]  @cr-map9

We then ask if Santa Claus ðŸŽ… is in the first group [1,2,3,4]. @cr-map9

If this is true, we have to divide the first group again into two groups ([1,2], [3,4]) and ask if Santa Claus is in [1,2].  @cr-map10

If this is true, we have to ask if Santa Claus ðŸŽ… is in cell 3.  @cr-map11

Okay, the Santa Claus ðŸŽ… is in cell 3.  @cr-map11b


In average, we have to wonder 1/2 * 1 + 1/2 * 3 = 2 questions to find Santa Claus ðŸŽ…. @cr-map11b

In our case, it was possible to use a dichtomic approach because all the probabilities are a power of 2. @cr-map11b

In general, Shanon's entropy is used to estimate the number of dichotomous questions. [@cr-limerick]{pan-to="0%,0%" scale-by="2"}

At first glance, it doesn't seem natural, at least for me. We will give it some interpretation. [@cr-limerick]{pan-to="0%,0%" scale-by="2"}

We can recognise an average in the first part. [@cr-limerick]{pan-to="0%,0%" scale-by="2" highlight="cr-mean"}

The second part is a bit more tricky. [@cr-limerick]{pan-to="0%,0%" scale-by="2" highlight="cr-quant"}

Logarithm is used to estimate the number of questions associated with the P<sub>i</sub>.  [@cr-limerick]{pan-to="0%,0%" scale-by="2" highlight="cr-quant"}

In fact, the logarithm is the quantity of digits needed to write a number. [@cr-limerick]{pan-to="0%,0%" scale-by="2" highlight="cr-quant"} 

So the entropy, is the average of question needed to find the Santa Claus.   [@cr-limerick]{pan-to="0%,0%" scale-by="2"}

If we try to apply the formula to our example, we find 2 again.  [@cr-limerick]{pan-to="0%,0%" scale-by="2"} 


Okay, this is interesting, but what's up with fractals? [@cr-limerick]{pan-to="0%,0%" scale-by="2"}


The information dimension is the number of additional questions that need to be asked to locate Santa Claus on a more precise scale. It is given by the Entropy of the generator.  [@cr-limerick]{pan-to="0%,0%" scale-by="2"}


:::{#cr-map7}
![](images/multifractal1a.svg)
:::

:::{#cr-map8}
![](images/multifractal1b2.svg)
:::

:::{#cr-map8b}
![](images/multifractal1b.svg)
:::

:::{#cr-map9}
![](images/multifractal1c.svg)
:::

:::{#cr-map10}
![](images/multifractal1d.svg)
:::

:::{#cr-map11}
![](images/multifractal1e.svg)
:::

:::{#cr-map11b}
![](images/multifractal1eb.svg)
:::

| {#cr-limerick .scale-to-fill}
| [$H = - \sum_{i} p_i$]{#cr-mean}  [$\log_2 (p_i)$]{#cr-quant}

::::



## And what about geography... 

In geography, the role of scale is a major concern. It has been theorized under the concept of the Modifiable Areal Unit Problem (MAUP). The resulting summary values (e.g., totals, rates, proportions, densities) are influenced by both the shape and scale of the aggregation unit.





::::{.cr-section layout="overlay-center"}

In this [example from Wikipedia](https://en.wikipedia.org/wiki/Modifiable_areal_unit_problem), we see a distribution of people and the distortion of rate calculations. @cr-map12


In the Region Set A, there is two units, one with 0% of illness rate and the other with 50 %. [@cr-map12]{pan-to="50%,-50%" scale-by="2"}

In the Region Set B, there is still two units,  one unit have 0% of illness rate but the other with 100 %. [@cr-map12]{pan-to="-50%,-50%" scale-by="2"}

It's not a theoretical trap. Unfortunately, the MAUP could influence how policy makers coordinate their actions at different scales, from local to regional to national. It is one of the reasons why we can't manage climate change. [@cr-map12]{pan-to="0%,0%" scale-by="1"}


:::{#cr-map12}
![](images/Maup_rate_numbers.png)
:::

::::

```{ojs}
widthheight = Math.min(width, window.innerHeight)

```

::::{.cr-section layout="overlay-center"}




:::{.progress-block}


One of the trickiest problems in geography is how to describe a spatial population, specialy in Mainland France.   @cr-cartes

The density of population depends of the scale.  @cr-cartes

At each scale there are high and low density places. @cr-cartes

But the deeper we go into the scale, the greater the variability of the scale.  @cr-cartes

We end up with a map of Paris. @cr-cartes

So, instead of focusing on specific good scales, it's better to think that all space scales are equally important and that the important information is in the ways they're connected to each other.    @cr-cartes

:::



:::{#cr-cartes}


```{ojs}

chart = Plot.plot({
  projection: projection,  
	
	width: widthheight,
	height: widthheight,

  color: {
    type: "quantile",
    n: 9,
    scheme: "RdYlGn",
    label: "Density of population",
    legend: false,
    reverse: true
  },

  marks: [
    Plot.geo(data, {fill: (d) => d.properties.ind}),
    Plot.geo(dep, { stroke: "black", strokeWidth: 5000/(0.5+crTriggerIndex**3 *.5) }),

    , null
  ]
})

```

:::


::::








::::{.cr-section layout="overlay-center"}


In practice, there is no generator, it's the reason why we use an estimation. We perform the entropy for different sides of the cells.[@cr-map20]{pan-to="0%,0%" scale-by="1"}

For example, we have computed the entropy around Paris for four sides of cells [800m, 1600m, 3200m, 6400m][@cr-map20]{pan-to="0%,0%" scale-by="1"}

The fractal dimension is the slope of the lesser squares regression line. It's an estimation. In your case, Paris is strictly fractal, because the points are aligned.  Nevertheless, the fractal dimension is always relevant and can be interpreted as the average marginal information across scales. [@cr-map21]{pan-to="0%,0%" scale-by="1"}


We have divided France in 25.6km side units and perform fractal analyis for each unit. The map displays the local fractal dimension of the population.    [@cr-map22]{pan-to="0%,0%" scale-by="1"}


We measure the dispersed concentration of the population that density can reveal. So it is a fantastic tool for the regional planning to adapt the network to the population.    [@cr-map22]{pan-to="0%,0%" scale-by="1"}


Regions with high fractal dimensions exhibit spatially dispersed populations, in contrast to those with low fractal dimensions, where populations are more concentrated. [@cr-map22]{pan-to="0%,0%" scale-by="1"}

Fractal geography transforms the Modifiable Areal Unit Problem into a tool for describing the organisation of human organisations.[@cr-map22]{pan-to="0%,0%" scale-by="1"}

:::{#cr-map20}
![](images/sc.svg)
:::

:::{#cr-map21}
![](images/sc_reg.svg)
:::




:::{#cr-map22}
![](images/dimension.svg)
:::


::::























```{ojs}
//| output: false
trans_x = function(x) {return (x- 3234242)/1200000*width};
trans_y = function(y) {return (-y+2016044+1200000)/1200000*width};
chart.setAttribute("viewBox", toto);
```

```{ojs}
carreaux_1 = FileAttachment("images/carreaux_20000.geojson").json();
carreaux_2 = FileAttachment("images/carreaux_5000.geojson").json();
carreaux_3 = FileAttachment("images/carreaux_1000.geojson").json();
carreaux_4 = FileAttachment("images/carreaux_200.geojson").json();
dep = FileAttachment("images/dep.geojson").json();
```

```{ojs}
//| output: false
projection =     d3.geoTransform({point: function(x, y) {this.stream.point((x- 3234242)/1200000*width,(-y+2016044+1200000)/1200000*width);  }
})
```

```{ojs}
//| output: false
progression = 
{
try {return  crProgressBlock}
catch {return 0.99}
}

```

```{ojs}
//| output: false
seuil = [0, .25, .5, 0.75,  1]

```

```{ojs}
//| output: false
etape = 
{
try {return seuil.findIndex(num => num > progression)-1;}
catch {return 3}
}

```

```{ojs}
//| echo: false
//| output: false
data_range = [carreaux_1, carreaux_2, carreaux_3, carreaux_4]
data = data_range[etape]
```

```{ojs}
//| echo: false
//| output: false
seuil_range = [seuil[etape], seuil[etape+1]]
```

```{ojs}
zoom1 = 100000
zoom2 = 20000
zoom3 = 7000
zoom4 = 7000
```

```{ojs}
//| echo: false
//| output: false
x_min_range = [[3234242, 3760524-zoom1], [3760524-zoom1, 3760524-zoom2], [3760524-zoom2, 3760524-zoom3],
               [3760524-zoom3, 3760524-zoom4]]
x_max_range =  [[4322644, 3760524+zoom1], [3760524+zoom1, 3760524+zoom2], [3760524+zoom2, 3760524+zoom3],
               [3760524+zoom3, 3760524+zoom4]]
y_min_range = [[2016044, 2889128-zoom1], [2889128-zoom1, 2889128-zoom2],  [2889128-zoom2, 2889128-zoom3],
               [2889128-zoom3, 2889128-zoom4]]
y_max_range = [[3261111, 2889128+zoom1], [2889128+zoom1, 2889128+zoom2],  [2889128+zoom2, 2889128+zoom3],
               [2889128+zoom3, 2889128+zoom4]]               
               
```

```{ojs}
//| echo: false
//| code-fold: false
//| output: false
x_min_f = d3.scaleLinear()
  .domain(seuil_range)
  .range(x_min_range[etape])
  .clamp(true)
  
x_max_f = d3.scaleLinear()
  .domain(seuil_range)
  .range(x_max_range[etape])
  .clamp(true)
  
y_min_f = d3.scaleLinear()
  .domain(seuil_range)
  .range(y_min_range[etape])
  .clamp(true)  

y_max_f = d3.scaleLinear()
  .domain(seuil_range)
  .range(y_max_range[etape])
  .clamp(true)



x_min = x_min_f(progression)
x_max = x_max_f(progression)
y_min = y_min_f(progression)
y_max = y_max_f(progression)
```




```{ojs}
//| output: false


toto = {
try {return trans_x(x_min) + " " + trans_y(y_max)+ " "  + (trans_x(x_max) - trans_x(x_min)) + " " + (trans_x(x_max) - trans_x(x_min))}
catch {return trans_x(3760524-zoom4) + " " + trans_y(2889128+zoom4)+ " "  + (trans_x(3760524+zoom4) - trans_x(3760524-zoom4)) + " " + (trans_x(3760524+zoom4) - trans_x(3760524-zoom4))}

}



```


## Further reading

We highly recommend the book [Fractal Geometry in Human Geography and Planning](https://www.wiley.com/en-us/Fractal+Geometry+in+Human+Geography+and+Planning-p-9781394306565) coordinated by Cecile Tannier, for which I had the pleasure of writing a few chapters with Cecile my Doctoral Advisor.

For a more theoretical and mathematical approach, nothing beats the book [Fractal Geometry: Mathematical Foundations and Applications](https://www.wiley.com/en-kr/Fractal+Geometry%3A+Mathematical+Foundations+and+Applications%2C+3rd+Edition-p-9781119942399)